{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observer/array.js","../../src/observer/index.js","../../src/state.js","../../src/compiler/index.js","../../src/init.js","../../src/index.js"],"sourcesContent":["/*\r\n * @Description: \r\n * @Version: 2.0\r\n * @Autor: kakachake\r\n * @Date: 2021-01-02 10:06:11\r\n * @LastEditors: kakachake\r\n * @LastEditTime: 2021-01-02 12:07:23\r\n */\r\n\r\n /**\r\n  * \r\n  * @param {*} data 当前数据是不是对象 \r\n  */\r\nexport function isObject(data){\r\n    return typeof data === 'object' && data !== null;\r\n}\r\n\r\nexport function def(data, key, value){\r\n    Object.defineProperty(data, key,{\r\n        enumerable:false,\r\n        configurable: false,\r\n        value\r\n    })\r\n}","/*\r\n * @Description: \r\n * @Version: 2.0\r\n * @Autor: kakachake\r\n * @Date: 2021-01-02 10:57:49\r\n * @LastEditors: kakachake\r\n * @LastEditTime: 2021-01-02 12:02:02\r\n */\r\n//我要重写数组的哪些方法 7个 push shift unshift pop reverse sort splice 会导致数组本身发生变化\r\n\r\nlet oldArrayMethods = Array.prototype;\r\n export let arrayMethods = Object.create(oldArrayMethods)\r\n\r\n const methods = [\r\n     'push',\r\n     'shift',\r\n     'unshift',\r\n     'pop',\r\n     'sort',\r\n     'splice',\r\n     'reverse'\r\n ]\r\n methods.forEach(method=>{\r\n     arrayMethods[method] = function(...args){\r\n        console.log('用户调用了'+method+'方法');\r\n\r\n        const result = oldArrayMethods[method].apply(this, args);//调用原生的数组方法\r\n\r\n        let inserted;\r\n\r\n        let ob = this.__ob__;\r\n        \r\n\r\n        switch(method){\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice': \r\n                inserted = args.slice(2);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        if(inserted){\r\n            console.log(ob);\r\n            ob.ObserverArray(inserted) //将新增属性继续观测\r\n        }\r\n        return result;\r\n     }\r\n })","/*\r\n * @Description: \r\n * @Version: 2.0\r\n * @Autor: kakachake\r\n * @Date: 2021-01-01 23:52:40\r\n * @LastEditors: kakachake\r\n * @LastEditTime: 2021-01-02 12:11:28\r\n */\r\n// 把data中的数据 都使用Object.defineProperty重新定义\r\nimport { isObject, def } from '../util/index'\r\nimport { arrayMethods } from './array.js'\r\n\r\nclass Observer{\r\n    constructor(value){\r\n        //如果数据层次过多，需要递归解析对象中的属性，依次增加set和get方法\r\n\r\n        //每一个监控过的属性添加一个ob属性\r\n        def(value, '__ob__', this);\r\n        if(Array.isArray(value)){\r\n            //数组不会对索引进行观测，会导致性能问题\r\n            //前端开发很少操作索引\r\n            value.__proto__ = arrayMethods;\r\n            //如果数组里为对象，再监控\r\n            this.ObserverArray(value);\r\n        }else{\r\n            this.walk(value);\r\n        }\r\n\r\n    }\r\n\r\n    ObserverArray(value){//数组对每个数据项内的元素进行劫持\r\n        value.forEach((key)=>{\r\n            observe(key)\r\n        })\r\n    }\r\n\r\n    walk(data){ //对象对每一个数据项进行递归劫持\r\n        let keys = Object.keys(data); //[name, age, address]\r\n\r\n        keys.forEach((key)=>{\r\n            defineReactive(data, key, data[key]); //定义响应式数据\r\n        })\r\n\r\n    }\r\n}\r\n\r\n/**\r\n * //对数据进行劫持\r\n * @param {*} data \r\n * @param {*} key \r\n * @param {*} value \r\n */\r\nfunction defineReactive(data, key, value){\r\n    observe(value); //递归\r\n    console.log(value, key);\r\n    Object.defineProperty(data, key, {\r\n        get(){\r\n            return value;\r\n        },\r\n        set(newValue){\r\n            console.log(key+'发生改变：'+newValue);\r\n            if(newValue === value) return;\r\n            observe(newValue);//继续劫持新的对象\r\n            value = newValue;\r\n        }\r\n    })\r\n}\r\n\r\n/**\r\n * 对对象中的每个数据进行监测，不包括对象本身\r\n * @param {*} data \r\n */\r\nexport function observe(data){\r\n    let isObj = isObject(data);\r\n    console.log(isObj);\r\n    if(!isObj){\r\n        return false;\r\n    }\r\n    return new Observer(data); // 用来观测数据\r\n}","/*\r\n * @Description: \r\n * @Version: 2.0\r\n * @Autor: kakachake\r\n * @Date: 2021-01-01 23:30:30\r\n * @LastEditors: kakachake\r\n * @LastEditTime: 2021-01-01 23:53:01\r\n */\r\nimport {observe} from './observer/index'\r\nexport function initState(vm){\r\n    const opts = vm.$options;\r\n\r\n    //vue数据来源 属性 方法 数据 计算属性 watch\r\n\r\n    if(opts.props){\r\n        initProps(vm);\r\n    }\r\n    if(opts.method){\r\n        initMethod(vm);\r\n    }\r\n    if(opts.data){\r\n        initData(vm);\r\n    }\r\n    if(opts.computed){\r\n        initComputed(vm);\r\n    }\r\n    if(opts.watch){\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\nfunction initProps(){}\r\nfunction initMethod(){}\r\nfunction initData(vm){\r\n    //数据初始化\r\n    let data = vm.$options.data;\r\n    data = vm._data = typeof data === 'function'?data.call(vm):data;\r\n    //对象劫持 用户改变了数据 我希望得到通知 => 刷新页面\r\n    //mvvm模式,数据变化驱动视图变化\r\n    //object.defineProperty() 给属性增加get和set方法\r\n    observe(data); //响应式原理\r\n}\r\nfunction initComputed(){}\r\nfunction initWatch(){}","/*\r\n * @Description: \r\n * @Version: 2.0\r\n * @Autor: kakachake\r\n * @Date: 2021-01-02 15:28:36\r\n * @LastEditors: kakachake\r\n * @LastEditTime: 2021-01-02 15:34:46\r\n */\r\n\r\n //ast语法树，是用对象来描述js语法的， 虚拟dom用来对象来描述dom节点\r\nexport function compileToFunction(template){\r\n    console.log(template, '---');\r\n}","/*\r\n * @Description: \r\n * @Version: 2.0\r\n * @Autor: kakachake\r\n * @Date: 2021-01-01 23:23:17\r\n * @LastEditors: kakachake\r\n * @LastEditTime: 2021-01-02 15:33:51\r\n */\r\nimport { initState } from './state'\r\n\r\nimport { compileToFunction } from './compiler/index'\r\n\r\n//在原型上添加一个init方法\r\nexport function initMixin(Vue){\r\n    Vue.prototype._init = function(options){\r\n        //数据的劫持\r\n        const vm = this; //vue中的this.$options 指代的就是用户传递的属性\r\n        vm.$options = options;\r\n    \r\n\r\n        //初始化状态\r\n        initState(vm);\r\n\r\n        //如果用户传入el属性 需要将页面渲染出来\r\n        //如果用户传入el 就要实现挂载流程\r\n\r\n        if(vm.$options.el){\r\n            vm.$mount(vm.$options.el);\r\n        }\r\n    }\r\n\r\n    Vue.prototype.$mount = function(el){\r\n        const vm = this;\r\n        const options = vm.$options;\r\n        el = document.querySelector(el);\r\n\r\n        //默认先会查找render,没有会采用template,没有用el中的内容\r\n\r\n        if(!options.render){\r\n            //对模板进行编译\r\n\r\n            let template = options.template;\r\n            if(!template && el){\r\n                template = el.outerHTML;\r\n            }\r\n            \r\n            //将template转化为render方法  虚拟dom\r\n            const render = compileToFunction(template)\r\n            console.log(template);\r\n        }\r\n    }\r\n}","/*\r\n * @Description: \r\n * @Version: 2.0\r\n * @Autor: kakachake\r\n * @Date: 2021-01-01 22:45:55\r\n * @LastEditors: kakachake\r\n * @LastEditTime: 2021-01-01 23:27:11\r\n */\r\n\r\n //Vue核心代码\r\n\r\nimport {initMixin} from './init'\r\n\r\nfunction Vue(options){\r\n    //进行vue的初始化操作\r\n    this._init(options);\r\n}\r\n\r\ninitMixin(Vue);\r\n\r\n\r\nexport default Vue;"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","oldArrayMethods","Array","prototype","arrayMethods","create","methods","forEach","method","console","log","args","result","apply","inserted","ob","__ob__","slice","ObserverArray","Observer","isArray","__proto__","walk","observe","keys","defineReactive","get","set","newValue","isObj","initState","vm","opts","$options","props","initData","computed","watch","_data","call","compileToFunction","template","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}